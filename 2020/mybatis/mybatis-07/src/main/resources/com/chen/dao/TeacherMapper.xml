<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--核心配置文件-->
<mapper namespace="com.chen.dao.TeacherMapper">
    <select id="getTeacher" resultType="com.chen.pojo.Teacher">
        select * from teacher;
    </select>

    <!--按照结果嵌套查询-->
    <select id="getTeachers" resultMap="TeacherStudent">
        select s.id sid,s.name sname,t.name tname,t.id tid from student s,teacher t where s.tid = t.id and t.id = #{tid};
    </select>
    <!--复杂查询我们需要单独处理 对象：association 集合：collection
        对于集合中的泛型  我们使用ofType来指定-->
    <resultMap id="TeacherStudent" type="com.chen.pojo.Teacher">
        <result property="id" column="tid"/>
        <result property="name" column="tname"/>
        <collection property="students" ofType="com.chen.pojo.Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>








    <!--按照查询嵌套处理
        思路：1、先查老师，然后查学生的tid为老师的id的学生的结果
    -->
    <select id="getTeachers2" resultMap="TeacherStudent2">
        select * from teacher where id=#{tid}
    </select>
    <resultMap id="TeacherStudent2" type="com.chen.pojo.Teacher">
        <collection property="students" javaType="ArrayList" ofType="com.chen.pojo.Student" select="getStudentByTeacherId" column="id"/>
    </resultMap>
    
    <select id="getStudentByTeacherId" resultType="com.chen.pojo.Student">
        select * from student where tid=#{tid};
    </select>
    
</mapper>